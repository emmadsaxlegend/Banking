[{"/Users/Emma/Desktop/Desktop files/My project/Banking/frontend/src/index.js":"1","/Users/Emma/Desktop/Desktop files/My project/Banking/frontend/src/App.js":"2","/Users/Emma/Desktop/Desktop files/My project/Banking/frontend/src/reportWebVitals.js":"3","/Users/Emma/Desktop/Desktop files/My project/Banking/frontend/src/utils/Common.js":"4","/Users/Emma/Desktop/Desktop files/My project/Banking/frontend/src/store/store.js":"5","/Users/Emma/Desktop/Desktop files/My project/Banking/frontend/src/router/AppRouter.js":"6","/Users/Emma/Desktop/Desktop files/My project/Banking/frontend/src/components/Navbar.js":"7","/Users/Emma/Desktop/Desktop files/My project/Banking/frontend/src/actions/Auth.js":"8","/Users/Emma/Desktop/Desktop files/My project/Banking/frontend/src/actions/Profile.js":"9","/Users/Emma/Desktop/Desktop files/My project/Banking/frontend/src/components/Account.js":"10","/Users/Emma/Desktop/Desktop files/My project/Banking/frontend/src/components/Profile.js":"11","/Users/Emma/Desktop/Desktop files/My project/Banking/frontend/src/components/Login.js":"12","/Users/Emma/Desktop/Desktop files/My project/Banking/frontend/src/components/Register.js":"13","/Users/Emma/Desktop/Desktop files/My project/Banking/frontend/src/router/PrivateRoutes.js":"14","/Users/Emma/Desktop/Desktop files/My project/Banking/frontend/src/utils/Constant.js":"15","/Users/Emma/Desktop/Desktop files/My project/Banking/frontend/src/actions/Alert.js":"16","/Users/Emma/Desktop/Desktop files/My project/Banking/frontend/src/reducers/authReducer.js":"17","/Users/Emma/Desktop/Desktop files/My project/Banking/frontend/src/reducers/alertReducer.js":"18","/Users/Emma/Desktop/Desktop files/My project/Banking/frontend/src/reducers/profileReducer.js":"19","/Users/Emma/Desktop/Desktop files/My project/Banking/frontend/src/reducers/transactionReducer.js":"20","/Users/Emma/Desktop/Desktop files/My project/Banking/frontend/src/reducers/accountReducer.js":"21","/Users/Emma/Desktop/Desktop files/My project/Banking/frontend/src/components/AccountForm.js":"22","/Users/Emma/Desktop/Desktop files/My project/Banking/frontend/src/components/Summary.js":"23","/Users/Emma/Desktop/Desktop files/My project/Banking/frontend/src/actions/accountActions.js":"24","/Users/Emma/Desktop/Desktop files/My project/Banking/frontend/src/actions/transactionAction.js":"25","/Users/Emma/Desktop/Desktop files/My project/Banking/frontend/src/components/TransactionTable.js":"26","/Users/Emma/Desktop/Desktop files/My project/Banking/frontend/src/utils/mask.js":"27","/Users/Emma/Desktop/Desktop files/My project/Banking/frontend/src/components/AddAccountForm.js":"28"},{"size":508,"mtime":1654536554126,"results":"29","hashOfConfig":"30"},{"size":327,"mtime":1654544506061,"results":"31","hashOfConfig":"30"},{"size":362,"mtime":1654517832062,"results":"32","hashOfConfig":"30"},{"size":1096,"mtime":1654534171915,"results":"33","hashOfConfig":"30"},{"size":763,"mtime":1654534164829,"results":"34","hashOfConfig":"30"},{"size":1041,"mtime":1654534159085,"results":"35","hashOfConfig":"30"},{"size":3201,"mtime":1656878566386,"results":"36","hashOfConfig":"30"},{"size":1669,"mtime":1656926101249,"results":"37","hashOfConfig":"30"},{"size":940,"mtime":1656926114888,"results":"38","hashOfConfig":"30"},{"size":2346,"mtime":1654534135882,"results":"39","hashOfConfig":"30"},{"size":6078,"mtime":1654534135889,"results":"40","hashOfConfig":"30"},{"size":5911,"mtime":1654534135886,"results":"41","hashOfConfig":"30"},{"size":8916,"mtime":1654534135891,"results":"42","hashOfConfig":"30"},{"size":534,"mtime":1654534159086,"results":"43","hashOfConfig":"30"},{"size":525,"mtime":1654534171916,"results":"44","hashOfConfig":"30"},{"size":641,"mtime":1654534130358,"results":"45","hashOfConfig":"30"},{"size":658,"mtime":1654534151794,"results":"46","hashOfConfig":"30"},{"size":988,"mtime":1654534151792,"results":"47","hashOfConfig":"30"},{"size":559,"mtime":1654534151795,"results":"48","hashOfConfig":"30"},{"size":462,"mtime":1654534151796,"results":"49","hashOfConfig":"30"},{"size":505,"mtime":1654534151788,"results":"50","hashOfConfig":"30"},{"size":3543,"mtime":1654534135884,"results":"51","hashOfConfig":"30"},{"size":3411,"mtime":1654534135892,"results":"52","hashOfConfig":"30"},{"size":1592,"mtime":1656926083579,"results":"53","hashOfConfig":"30"},{"size":1716,"mtime":1656926130784,"results":"54","hashOfConfig":"30"},{"size":3392,"mtime":1654534135893,"results":"55","hashOfConfig":"30"},{"size":121,"mtime":1654534171917,"results":"56","hashOfConfig":"30"},{"size":5762,"mtime":1654534135885,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"14wcb5r",{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"60"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"60"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"60"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"60"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"60"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"60"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"60"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"60"},"/Users/Emma/Desktop/Desktop files/My project/Banking/frontend/src/index.js",[],["125","126"],"/Users/Emma/Desktop/Desktop files/My project/Banking/frontend/src/App.js",["127"],"import './App.css';\nimport { Provider } from 'react-redux'\nimport store from './store/store';\nimport AppRouter from './router/AppRouter';\nimport Navbar from './components/Navbar';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      \n      {/* <Navbar/> */}\n\t\t\t<AppRouter/>\n\t\t</Provider>\n  );\n}\n\nexport default App\n\n","/Users/Emma/Desktop/Desktop files/My project/Banking/frontend/src/reportWebVitals.js",[],"/Users/Emma/Desktop/Desktop files/My project/Banking/frontend/src/utils/Common.js",[],"/Users/Emma/Desktop/Desktop files/My project/Banking/frontend/src/store/store.js",[],"/Users/Emma/Desktop/Desktop files/My project/Banking/frontend/src/router/AppRouter.js",[],"/Users/Emma/Desktop/Desktop files/My project/Banking/frontend/src/components/Navbar.js",["128","129"],"import { AppBar, CssBaseline,IconButton, makeStyles, Menu, MenuItem, Toolbar, Typography } from '@material-ui/core'\nimport {AccountCircle } from '@material-ui/icons'\nimport React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom';\nimport { logout } from '../actions/Auth';\nimport logo from '../images/bank.png'\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n      cursor: 'pointer'\n    },\n}))\n\n\n\nconst Navbar = ({ auth, logout }) => {\n    const classes = useStyles()\n    const [anchorEl, setAnchorEl] = useState(null)\n    const open = Boolean(anchorEl)\n    const { isAuthenticated } = auth\n    \n    const handleMenu = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n    \n    const handleClose = () => {\n        setAnchorEl(null);\n    }\n\n    const handleCloseLogout = () => {\n        handleClose()\n        logout()\n    }\n\n    return (\n        <div className={classes.root}>\n            <CssBaseline/>\n            <div className='ward'>\n                <Toolbar>\n                <img src={logo} className='imag'></img>\n    \n             <Typography variant=\"h6\" className={classes.title}>\n                    XYZ Bank\n                </Typography>\n                {isAuthenticated && (\n                    <div>\n                        <span>welcomes</span>\n                    <IconButton\n                        aria-label=\"account of current user\"\n                        aria-controls=\"menu-appbar\"\n                        aria-haspopup=\"true\"\n                        onClick={handleMenu}\n                        color=\"inherit\">\n                        \n                        <AccountCircle />\n                    </IconButton>\n                    <Menu\n                        id=\"menu-appbar\"\n                        anchorEl={anchorEl}\n                        anchorOrigin={{\n                            vertical: 'top',\n                            horizontal: 'right',\n                        }}\n                        keepMounted\n                        transformOrigin={{\n                            vertical: 'top',\n                            horizontal: 'right',\n                        }}\n                        open={open}\n                        onClose={handleClose}\n                    >\n                        <Link to='/profile' style={{ textDecoration: 'none', display: 'block', color: '#000' }}>\n                            <MenuItem onClick={handleClose}>Profile</MenuItem>\n                        </Link>\n                        <Link to='/account' style={{ textDecoration: 'none', display: 'block', color: '#000' }}>\n                            <MenuItem onClick={handleClose}>Account</MenuItem>\n                        </Link>\n                        <MenuItem onClick={handleCloseLogout}>Logout</MenuItem>\n                    </Menu>\n                    </div>\n                )}\n                </Toolbar>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    auth: state.auth\n})\n\nexport default connect(mapStateToProps, { logout })(Navbar)\n\n","/Users/Emma/Desktop/Desktop files/My project/Banking/frontend/src/actions/Auth.js",[],"/Users/Emma/Desktop/Desktop files/My project/Banking/frontend/src/actions/Profile.js",[],"/Users/Emma/Desktop/Desktop files/My project/Banking/frontend/src/components/Account.js",["130"],"import React, { useEffect, useState } from 'react'\nimport { AppBar, Box, Tab, Tabs, Typography } from '@material-ui/core';\nimport AccountForm from './AccountForm';\nimport Summary from './Summary';\nimport { connect } from 'react-redux';\nimport { getAccountDetails } from '../actions/accountActions';\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props\n  \n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`full-width-tabpanel-${index}`}\n            aria-labelledby={`full-width-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <Box p={3}>\n                    <Typography>{children}</Typography>\n                </Box>\n            )}\n        </div>\n    )\n}\nfunction a11yProps(index) {\n    return {\n        id: `full-width-tab-${index}`,\n        'aria-controls': `full-width-tabpanel-${index}`,\n    }\n}\n\nconst Account = ({ userInfo, getAccountDetails }) => {\n    const [value, setValue] = useState(0);\n    const { phone } = userInfo\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    useEffect(() => {\n        if(phone){\n            getAccountDetails()\n        }\n    }, [phone])\n    return (\n        <div>\n            <AppBar position=\"static\" color=\"default\">\n                <Tabs\n                value={value}\n                onChange={handleChange}\n                indicatorColor=\"primary\"\n                textColor=\"primary\"\n                variant=\"fullWidth\"\n                aria-label=\"full width tabs example\"\n                >\n                    <Tab label=\"Summary\" {...a11yProps(0)} />\n                    <Tab label=\"Withdraw\" {...a11yProps(1)} />\n                    <Tab label=\"Deposit\" {...a11yProps(2)} />\n                </Tabs>\n            </AppBar>\n            <TabPanel value={value} index={0}>\n                <Summary/>\n            </TabPanel>\n            <TabPanel value={value} index={1}>\n                <AccountForm type='Withdraw'/>\n            </TabPanel>\n            <TabPanel value={value} index={2}>\n                <AccountForm type='Deposit'/>\n            </TabPanel>\n\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    userInfo: state.auth.userInfo\n})\n\nexport default connect(mapStateToProps, { getAccountDetails })(Account)\n","/Users/Emma/Desktop/Desktop files/My project/Banking/frontend/src/components/Profile.js",[],"/Users/Emma/Desktop/Desktop files/My project/Banking/frontend/src/components/Login.js",["131","132"],"import React, { useEffect, useState } from 'react'\nimport { Box, Button, FormControl, Grid, IconButton, Input, InputAdornment, InputLabel, makeStyles, Snackbar, SnackbarContent, Typography } from '@material-ui/core'\nimport { Visibility, VisibilityOff } from '@material-ui/icons'\nimport clsx from 'clsx'\nimport { connect } from 'react-redux'\nimport { initiateLogin } from '../actions/Auth'\nimport { validateFields } from '../utils/Common'\nimport { Alert } from '@material-ui/lab'\nimport { setErrors } from '../actions/Alert'\nimport { Link, useHistory } from 'react-router-dom'\n\nconst useStyles = makeStyles((theme) => ({\n    root1: {\n        flexGrow: 1\n    },\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n    },\n    margin: {\n      margin: theme.spacing(1),\n    },\n    withoutLabel: {\n      marginTop: theme.spacing(3),\n    },\n    textField: {\n      width: '50ch',\n    },\n    linkStyle: {\n        textDecoration: 'none',\n        color: 'inherit',\n    }\n}))\n\nconst Login = ({ initiateLogin, error, successMsg, setErrors, auth }) => {\n    const classes = useStyles()\n    const history = useHistory()\n\n    const [values, setValues] = useState({\n        phone: '',\n        password: '',\n        showPassword: false,\n        open: false\n    })\n\n    const handleChange = (prop) => (event) => {\n        setValues({ ...values, [prop]: event.target.value })\n    }\n    const handleClickShowPassword = () => {\n        setValues({ ...values, showPassword: !values.showPassword })\n    }\n    const handleMouseDownPassword = (event) => {\n        event.preventDefault()\n    }\n\n    const onLogin = (e) => {\n        e.preventDefault()\n        const { phone, password } = values\n        const fieldsToValidate = [{ phone }, { password }]\n        const allFieldsEntered = validateFields(fieldsToValidate)\n        if (!allFieldsEntered) {\n            // setValues({ ...values, errorMsg: { signin_error: 'Please enter all the fields' }})\n            setErrors({ signin_error: 'Please enter all the fields' })\n        } else {\n            initiateLogin(phone, password)\n        }\n    }\n    const closeSnackbar = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n    \n        setValues({...values, open: false})\n    }\n    useEffect(() => {\n        if(auth.isAuthenticated){\n            history.push('/account')\n        }\n        if(error && error.length !== 0){\n            setValues({...values, open: true})\n        } else {\n            setValues({...values, open: false})\n        }\n    }, [error, history, auth.isAuthenticated])\n    \n    return (\n        <form onSubmit={onLogin}>\n            {error && error.map(e => (\n                <Snackbar key={e.id} anchorOrigin={{ vertical: 'top', horizontal: 'right' }} open={values.open} onClose={closeSnackbar}>\n                    <Alert onClose={closeSnackbar} severity=\"error\">\n                        {e.error.signin_error}\n                    </Alert>\n                </Snackbar>\n            ))}\n            <Grid  direction=\"column\" justify=\"center\" alignItems=\"center\" className={classes.root1} container spacing={2}>\n                <Grid item xs={12}>\n                    <Typography className={clsx(classes.margin, classes.withoutLabel)} variant='h4' component='h4'> Account Login</Typography>\n                </Grid>\n                <Grid item xs={12}>\n                    <Box display='flex'>\n                        <FormControl className={clsx(classes.margin, classes.textField)}>\n                            <InputLabel htmlFor=\"phone\">Phone/Account Number</InputLabel>\n                            <Input\n                                id=\"phone\"\n                                type='phone'\n                                value={values.phone}\n                                onChange={handleChange('phone')}\n                            />\n                        </FormControl>\n                    </Box>\n                </Grid>\n                <Grid item xs={12}>\n                    <Box display='flex'>\n                        <FormControl className={clsx(classes.margin, classes.textField)}>\n                            <InputLabel htmlFor=\"password\">Password</InputLabel>\n                            <Input\n                                id=\"password\"\n                                type={values.showPassword ? 'text' : 'password'}\n                                value={values.password}\n                                onChange={handleChange('password')}\n                                endAdornment={\n                                <InputAdornment position=\"end\">\n                                    <IconButton\n                                    aria-label=\"toggle password visibility\"\n                                    onClick={handleClickShowPassword}\n                                    onMouseDown={handleMouseDownPassword}\n                                    >\n                                    {values.showPassword ? <Visibility /> : <VisibilityOff />}\n                                    </IconButton>\n                                </InputAdornment>\n                                }\n                            />\n                        </FormControl>\n                    </Box>\n                </Grid>\n                <Grid item xs={12}>\n                    <Box display='flex'>\n                        <Button type='submit' variant='contained' className={clsx(classes.margin, classes.textField)}> Login </Button>\n                    </Box>\n                </Grid>\n                <Box my={1}>\n                    New Customer? <Link className={classes.linkStyle} to='/register'><strong>Register</strong></Link>\n                </Box>\n            </Grid>\n        </form>\n    )\n}\n\nconst mapStateToProps = state => ({\n    error: state.alert.error,\n    successMsg : state.alert.successMsg,\n    auth: state.auth\n})\n\nexport default connect(mapStateToProps, { initiateLogin, setErrors })(Login)\n","/Users/Emma/Desktop/Desktop files/My project/Banking/frontend/src/components/Register.js",["133","134","135"],"import React, { useEffect, useState } from 'react'\nimport { Box, Button, FormControl, Grid, IconButton, Input, InputAdornment, InputLabel, makeStyles, Snackbar, Typography } from '@material-ui/core'\nimport { Visibility, VisibilityOff } from '@material-ui/icons'\nimport clsx from 'clsx'\nimport { registerUser } from '../actions/Auth'\nimport { connect } from 'react-redux'\nimport { validateFields } from '../utils/Common'\nimport { setErrors } from '../actions/Alert'\nimport { Alert } from '@material-ui/lab'\nimport { Link, useHistory } from 'react-router-dom'\n\nconst useStyles = makeStyles((theme) => ({\n    root1: {\n        flexGrow: 1\n    },\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n    },\n    margin: {\n      margin: theme.spacing(1),\n    },\n    withoutLabel: {\n      marginTop: theme.spacing(3),\n    },\n    textField: {\n      width: '50ch',\n    },\n    linkStyle: {\n        textDecoration: 'none',\n        color: 'inherit',\n    }\n}))\n\nconst Register = ({ registerUser, setErrors, error, successMsg, auth }) => {\n    const classes = useStyles()\n    const history = useHistory()\n    const { isAuthenticated } = auth\n    const [values, setValues] = useState({\n        name: '',\n        phone: '',\n        password: '',\n        cpassword: '',\n        showPassword: false,\n        cShowPassword: false,\n        open: false,\n        openSuccess: false\n    })\n\n    const handleChange = (prop) => (event) => {\n        setValues({ ...values, [prop]: event.target.value })\n    }\n    const handleClickShowPassword = (type) => {\n        setValues({ ...values, [type]: !values[type] })\n    }\n    const handleMouseDownPassword = (event) => {\n        event.preventDefault()\n    }\n\n    const closeSnackbar = (event, reason) => {\n        if (reason === 'clickaway') { return; }\n        setValues({...values, open: false})\n        setValues({...values, openSuccess: false})\n    }\n\n    const onFormSubmit = async (e) => {\n        e.preventDefault()\n        const { name, phone, password, cpassword } = values\n        const fieldsToValidate = [\n            { name },\n            { phone },\n            { password },\n            { cpassword }\n        ]\n        const allFieldsEntered = validateFields(fieldsToValidate)\n        if (!allFieldsEntered) {\n            setErrors({ signup_error: 'Please enter all the fields' })\n        } else {\n            if (password !== cpassword) {\n                setErrors({ signup_error: 'Password and Confirm password does not match' })\n                \n            } else {\n                const register = await registerUser({ name, phone, password })\n                // history.push('/profile')\n            }\n        }\n    }\n\n    useEffect(() => {\n        if(auth.isAuthenticated){\n            history.push('/profile')\n        }\n        if(error && error.length !== 0){\n            setValues({...values, open: true})\n        } else if(successMsg && successMsg.length !== 0){\n            setValues({...values, openSuccess: true})\n        } else {\n            setValues({...values, open: false})\n            setValues({...values, openSuccess: false})\n        }\n    }, [error, successMsg, auth.isAuthenticated, history])\n    return (\n        <form onSubmit={onFormSubmit}>\n            {error && values.open && error.map(e => (\n                <Snackbar anchorOrigin={{ vertical: 'top', horizontal: 'right' }} autoHideDuration={6000} open={values.open} onClose={closeSnackbar}>\n                    <Alert onClose={closeSnackbar} severity=\"error\">\n                        {e.error.signup_error}\n                    </Alert>\n                </Snackbar>\n            ))}\n            {successMsg && values.openSuccess && successMsg.map(s => (\n                <Snackbar anchorOrigin={{ vertical: 'top', horizontal: 'right' }} autoHideDuration={6000} open={values.openSuccess} onClose={closeSnackbar}>\n                    <Alert onClose={closeSnackbar} severity=\"success\">\n                        {s.successMsg}\n                    </Alert>\n                </Snackbar>\n            ))\n            }\n            <Grid  direction=\"column\" justify=\"center\" alignItems=\"center\" className={classes.root1} container spacing={2}>\n                <Grid item xs={12}>\n                    <Typography className={clsx(classes.margin, classes.withoutLabel)} variant='h4' component='h4'> Account Register</Typography>\n                </Grid>\n                <Grid item xs={12}>\n                    <Box display='flex'>\n                        <FormControl className={clsx(classes.margin, classes.textField)}>\n                            <InputLabel htmlFor=\"name\">Name</InputLabel>\n                            <Input\n                                id=\"name\"\n                                type='text'\n                                value={values.name}\n                                onChange={handleChange('name')}\n                            />\n                        </FormControl>\n                    </Box>\n                </Grid>\n                <Grid item xs={12}>\n                    <Box display='flex'>\n                        <FormControl className={clsx(classes.margin, classes.textField)}>\n                            <InputLabel htmlFor=\"phone\">Phone/Account Number</InputLabel>\n                            <Input\n                                id=\"phone\"\n                                type='phone'\n                                value={values.phone}\n                                onChange={handleChange('phone')}\n                            />\n                        </FormControl>\n                    </Box>\n                </Grid>\n                <Grid item xs={12}>\n                    <Box display='flex'>\n                        <FormControl className={clsx(classes.margin, classes.textField)}>\n                            <InputLabel htmlFor=\"password\">Password</InputLabel>\n                            <Input\n                                id=\"password\"\n                                type={values.showPassword ? 'text' : 'password'}\n                                value={values.password}\n                                onChange={handleChange('password')}\n                                endAdornment={\n                                <InputAdornment position=\"end\">\n                                    <IconButton\n                                    aria-label=\"toggle password visibility\"\n                                    onClick={() => handleClickShowPassword('showPassword')}\n                                    onMouseDown={handleMouseDownPassword}\n                                    >\n                                    {values.showPassword ? <Visibility /> : <VisibilityOff />}\n                                    </IconButton>\n                                </InputAdornment>\n                                }\n                            />\n                        </FormControl>\n                    </Box>\n                </Grid>\n                <Grid item xs={12}>\n                    <Box display='flex'>\n                        <FormControl className={clsx(classes.margin, classes.textField)}>\n                            <InputLabel htmlFor=\"cpassword\">Confirm Password</InputLabel>\n                            <Input\n                                id=\"cpassword\"\n                                type={values.cShowPassword ? 'text' : 'password'}\n                                value={values.cpassword}\n                                onChange={handleChange('cpassword')}\n                                endAdornment={\n                                <InputAdornment position=\"end\">\n                                    <IconButton\n                                    aria-label=\"toggle password visibility\"\n                                    onClick={() => handleClickShowPassword('cShowPassword')}\n                                    onMouseDown={handleMouseDownPassword}\n                                    >\n                                    {values.cShowPassword ? <Visibility /> : <VisibilityOff />}\n                                    </IconButton>\n                                </InputAdornment>\n                                }\n                            />\n                        </FormControl>\n                    </Box>\n                </Grid>\n                <Grid item xs={12}>\n                    <Box display='flex'>\n                        <Button type='submit' variant='contained' className={clsx(classes.margin, classes.textField)}> Register </Button>\n                    </Box>\n                </Grid>\n                <Box my={1}>\n                    Have an account? <Link className={classes.linkStyle} to='/'><strong>Login</strong></Link>\n                </Box>\n            </Grid>\n        </form>\n    )\n}\n\nconst mapStateToProps = state => ({\n    error: state.alert.error,\n    successMsg: state.alert.successMsg,\n    auth: state.auth\n})\n\nexport default connect(mapStateToProps, { registerUser, setErrors })(Register)\n","/Users/Emma/Desktop/Desktop files/My project/Banking/frontend/src/router/PrivateRoutes.js",[],"/Users/Emma/Desktop/Desktop files/My project/Banking/frontend/src/utils/Constant.js",[],"/Users/Emma/Desktop/Desktop files/My project/Banking/frontend/src/actions/Alert.js",[],"/Users/Emma/Desktop/Desktop files/My project/Banking/frontend/src/reducers/authReducer.js",[],"/Users/Emma/Desktop/Desktop files/My project/Banking/frontend/src/reducers/alertReducer.js",[],"/Users/Emma/Desktop/Desktop files/My project/Banking/frontend/src/reducers/profileReducer.js",[],"/Users/Emma/Desktop/Desktop files/My project/Banking/frontend/src/reducers/transactionReducer.js",[],"/Users/Emma/Desktop/Desktop files/My project/Banking/frontend/src/reducers/accountReducer.js",[],"/Users/Emma/Desktop/Desktop files/My project/Banking/frontend/src/components/AccountForm.js",["136"],"import React, { useState } from 'react'\nimport { Button, Card, CardActions, CardContent, Container, FormControl, Input, InputAdornment, InputLabel, makeStyles, OutlinedInput, Typography } from '@material-ui/core'\nimport AddAccountForm from './AddAccountForm'\nimport { connect } from 'react-redux'\nimport { maskNumber } from '../utils/mask'\nimport { depositAmount, withdrawAmount } from '../actions/transactionAction'\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        minWidth: 275,\n    },\n    bullet: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)',\n    },\n    title: {\n        fontSize: 20,\n    },\n    pos: {\n        marginBottom: 12,\n        marginTop: 12,\n    },\n    margin: {\n        marginTop: 18,\n        marginBottom: 18\n    },\n    margin1: {\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1)\n    }\n}))\n\nconst AccountForm = ({ type, account, withdrawAmount, depositAmount }) => {\n    const classes = useStyles()\n    const [amount, setAmount] = useState(\"\")\n    const accountNo = account.account_no ? maskNumber(account.account_no) : ''\n\n\n    const onSubmit = (e) => {\n        // e.preventDefault()\n        type === 'Deposit' ? depositAmount(account._id, Number(amount), alert(\"Deposited succesfully\")) : withdrawAmount(account._id, Number(amount), alert('Withdrawal Successfully'))\n        setAmount('')\n    }\n    return (\n        <Container>\n            { accountNo ? \n            <Card className={classes.root} variant=\"outlined\">\n                <form onSubmit={onSubmit}>\n                    <CardContent>\n                        <Typography className={classes.title} gutterBottom>\n                            {type}\n                        </Typography>\n                        <Typography className={classes.pos}>\n                            Account Number: { accountNo }\n                        </Typography>\n                        <Typography className={classes.pos}>\n                            Available Balance: {account.total_balance}\n                        </Typography>\n                        <Typography className={classes.margin}>\n                        <FormControl className={classes.margin1} variant=\"outlined\">\n                            <InputLabel htmlFor=\"outlined-adornment-amount\">Amount</InputLabel>\n                                <OutlinedInput\n                                    size='small'\n                                    id=\"outlined-adornment-amount\"\n                                    value={amount}\n                                    onChange={(e) => setAmount(e.target.value)}\n                                    startAdornment={<InputAdornment position=\"start\">&#8358;</InputAdornment>}\n                                    labelWidth={60}\n                                    style={{width: '50vw'}}\n                                    placeholder={`Enter the amount to ` + type }\n                                    required\n                                />\n                            </FormControl>\n                        </Typography>\n                    </CardContent>\n                    <CardActions>\n                        <Button type='submit' color='primary' variant='contained'>Submit</Button>\n                    </CardActions>\n                </form>\n            </Card> :\n            <AddAccountForm/> }\n        </Container>\n    )\n}\n\nconst mapStateToProps = state => ({\n    account: state.account\n})\n\nexport default connect(mapStateToProps, { depositAmount, withdrawAmount })(AccountForm)","/Users/Emma/Desktop/Desktop files/My project/Banking/frontend/src/components/Summary.js",["137"],"import 'date-fns';\nimport React, { useEffect, useState } from 'react'\nimport Grid from '@material-ui/core/Grid';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\nimport { Button, makeStyles } from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport { getTransactions } from '../actions/transactionAction';\nimport TransactionTable from './TransactionTable';\n\nfunction disablePrevDates(startDate) {\n    const startSeconds = Date.parse(startDate);\n    return (date) => {\n        return Date.parse(date) < startSeconds;\n    }\n}\n\nconst useStyles = makeStyles({\n    margin: {\n        marginBottom: 10\n    }\n})\n\nconst Summary = ({ getTransactions, account }) => {\n    const classes = useStyles()\n    const [startDate, setStartDate] = useState(null);\n    const [endDate, setEndDate] = useState(null);\n\n    useEffect(() => {\n        if(account._id){\n            getTransactions(account._id)\n        }\n    }, [account])\n\n    const onFilter = (event) => {\n        event.preventDefault()\n        getTransactions(account._id, startDate, endDate)\n    }\n    return (\n        <div>\n            <Grid className={classes.margin} container justify='center' alignItems='center' spacing={2}>\n                <Grid item xs={4} alignContent='center'>\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                        <KeyboardDatePicker\n                            variant=\"inline\"\n                            autoOk={true}\n                            format=\"MM/dd/yyyy\"\n                            margin=\"normal\"\n                            id=\"start-date\"\n                            label=\"Start Date\"\n                            value={startDate}\n                            maxDate={new Date()}\n                            onChange={date => setStartDate(date)}\n                            KeyboardButtonProps={{\n                                'aria-label': 'change date',\n                            }}\n                        />\n                    </MuiPickersUtilsProvider>\n                </Grid>\n                <Grid item xs={4}>\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                        <KeyboardDatePicker\n                            variant=\"inline\"\n                            autoOk={true}\n                            format=\"MM/dd/yyyy\"\n                            margin=\"normal\"\n                            id=\"end-date\"\n                            label=\"End Date\"\n                            value={endDate}\n                            maxDate={new Date()}\n                            shouldDisableDate={disablePrevDates(startDate)}\n                            onChange={date => setEndDate(date)}\n                            KeyboardButtonProps={{\n                                'aria-label': 'change date',\n                            }}\n                        />\n                    </MuiPickersUtilsProvider>\n                </Grid>\n                <Grid item xs={4}>\n                    <Button variant='contained' onClick={onFilter} color='primary'>\n                        Filter\n                    </Button>\n                </Grid>\n            </Grid>\n            <TransactionTable/>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    account: state.account,\n})\n\nexport default connect(mapStateToProps, { getTransactions })(Summary)\n","/Users/Emma/Desktop/Desktop files/My project/Banking/frontend/src/actions/accountActions.js",[],"/Users/Emma/Desktop/Desktop files/My project/Banking/frontend/src/actions/transactionAction.js",["138","139"],"import Axios from 'axios'\nimport { ADD_TRANSACTION, GET_TRANSACTION } from '../utils/Constant'\nimport { updateAccount } from './accountActions'\nimport { setErrors } from './Alert'\n\nexport const depositAmount = (account_id, deposit_amount) => async dispatch => {\n    try {\n        const { data: { msg , accountDetails, transactionDetails } } = await Axios.post(`http://localhost:5000/deposit/${account_id}`, { deposit_amount })\n        \n        dispatch({\n            type: ADD_TRANSACTION,\n            payload: transactionDetails\n        })\n\n        dispatch(updateAccount(accountDetails))\n    } catch (error) {\n        error.response && dispatch(setErrors(error.response.data))\n    }\n}\n\nexport const withdrawAmount = (account_id, withdraw_amount) => async dispatch => {\n    try {\n        const { data: { msg , accountDetails, transactionDetails } } = await Axios.post(`http://localhost:5000/withdraw/${account_id}`, { withdraw_amount })\n\n        dispatch({\n            type: ADD_TRANSACTION,\n            payload: transactionDetails\n        })\n\n        dispatch(updateAccount(accountDetails))\n    } catch (error) {\n        error.response && dispatch(setErrors(error.response.data))\n    }\n}\n\nexport const getTransactions = (account_id, startDate, endDate) => async dispatch => {\n    try {\n        const transactions = await Axios.get(`http://localhost:5000/transaction/${account_id}`,\n            {\n                params: {\n                    startDate,\n                    endDate\n                }\n            })\n        dispatch({\n            type: GET_TRANSACTION,\n            payload: transactions.data\n        })\n    } catch (error) {\n        error.response && dispatch(setErrors(error.response.data))\n    }\n}","/Users/Emma/Desktop/Desktop files/My project/Banking/frontend/src/components/TransactionTable.js",["140","141"],"import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport { connect } from 'react-redux';\n\nconst columns = [\n  { id: 'transaction_date', label: 'Date', minWidth: 170, format: (value) => new Date(value).toDateString() },\n  {\n    id: 'deposit_amount',\n    label: 'Deposits',\n    align: 'right',\n    minWidth: 100,\n    format: (value) => value.toLocaleString('en-US'),\n  },\n  {\n    id: 'withdraw_amount',\n    label: 'Withdrawals',\n    minWidth: 170,\n    align: 'right',\n    format: (value) => value.toLocaleString('en-US'),\n  },\n  {\n    id: 'balance',\n    label: 'Balance',\n    minWidth: 170,\n    align: 'right',\n    format: (value) => value.toLocaleString('en-US'),\n  },\n];\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n  },\n  container: {\n    maxHeight: 440,\n  },\n});\n\nconst TransactionTable = ({ transaction }) => {\n  const rows = transaction\n  const classes = useStyles();\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  return (\n    <Paper className={classes.root}>\n      <TableContainer className={classes.container}>\n        <Table stickyHeader aria-label=\"sticky table\">\n          <TableHead>\n            <TableRow>\n              {columns.map((column) => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth}}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\n              return (\n                <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code} >\n                  {columns.map((column) => {\n                    const value = row[column.id];\n                    return (\n                      <TableCell key={column.id} align={column.align} style={{color: 'brown'}}>\n                        {column.format && typeof value === 'number' || column.label === 'Date' ? column.format(value) : value}\n                      </TableCell>\n                    );\n                  })}\n                </TableRow>\n              );\n            })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <TablePagination\n        rowsPerPageOptions={[10, 25, 100]}\n        component=\"div\"\n        count={rows.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onChangePage={handleChangePage}\n        onChangeRowsPerPage={handleChangeRowsPerPage}\n      />\n    </Paper>\n  );\n}\n\nconst mapStateToProps = state => ({\n  transaction: state.transaction\n})\nexport default connect(mapStateToProps, null)(TransactionTable)\n","/Users/Emma/Desktop/Desktop files/My project/Banking/frontend/src/utils/mask.js",[],"/Users/Emma/Desktop/Desktop files/My project/Banking/frontend/src/components/AddAccountForm.js",["142","143","144","145","146","147"],"import React, { useEffect, useState } from 'react'\nimport { Button, Card, CardActions, CardContent, FormControl, Snackbar, Input, InputAdornment, InputLabel, makeStyles, OutlinedInput, Typography } from '@material-ui/core'\nimport { connect } from 'react-redux'\nimport { addAccountDetails } from '../actions/accountActions'\nimport { Alert } from '@material-ui/lab'\nimport { validateFields } from '../utils/Common'\n\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        minWidth: 275,\n    },\n    bullet: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)',\n    },\n    title: {\n        fontSize: 20,\n    },\n    pos: {\n        marginBottom: 12,\n        marginTop: 12,\n    },\n    margin: {\n        marginTop: 18,\n        marginBottom: 18\n    },\n    margin1: {\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1)\n    }\n}))\n\n\nconst AddAccountForm = ({ addAccountDetails, setErrors, error,successMsg}) => {\n    const classes = useStyles()\n    const [values, setValues] = useState({\n        accountNo: \"\",\n        bankName: \"\",\n        bvn: \"\"\n    })\n   \n    // const closeSnackbar = (event, reason) => {\n    //     if (reason === 'clickaway') { return; }\n    //     setValues({...values, open: false})\n    //     setValues({...values, openSuccess: false})\n    // }\n\n    const handleChange = (prop) => (event) => {\n        setValues({...values, [prop]: event.target.value})\n    }\n    const addAccount = async (e) => {\n        e.preventDefault()\n        // const { accountNo, bankName, bvn } = values\n        // const fieldsToValidate = [\n        //     { accountNo },\n        //     { bankName },\n        //     { bvn },\n        // ]\n\n        // const allFieldsEntered = validateFields(fieldsToValidate)\n        // if (!allFieldsEntered) {\n        //     setErrors({ sign_error: 'Please enter all the fields' })\n        //     // alert('enter all fields')\n        // }else{\n            await addAccountDetails(values.accountNo, values.bankName, values.bvn)\n        // }\n       \n        \n    }\n    // useEffect(() => {\n    //     if(error && error.length !== 0){\n    //         setValues({...values, open: true})\n    //     } else if(successMsg && successMsg.length !== 0){\n    //         setValues({...values, openSuccess: true})\n    //     } else {\n    //         setValues({...values, open: false})\n    //         setValues({...values, openSuccess: false})\n    //     }\n    // }, [error, successMsg])\n    return (\n        <Card className={classes.root} variant=\"outlined\">\n            <form onSubmit={addAccount}>\n            {/* {error && values.open && error.map(e => (\n                <Snackbar anchorOrigin={{ vertical: 'top', horizontal: 'right' }} autoHideDuration={6000} open={values.open} onClose={closeSnackbar}>\n                    <Alert onClose={closeSnackbar} severity=\"error\">\n                        {e.error.sign_error}\n                    </Alert>\n                </Snackbar>\n            ))}\n            {successMsg && values.openSuccess && successMsg.map(s => (\n                <Snackbar anchorOrigin={{ vertical: 'top', horizontal: 'right' }} autoHideDuration={6000} open={values.openSuccess} onClose={closeSnackbar}>\n                    <Alert onClose={closeSnackbar} severity=\"success\">\n                        {s.successMsg}\n                    </Alert>\n                </Snackbar>\n            ))\n            } */}\n                <CardContent>\n                    <Typography className={classes.title} gutterBottom>\n                        Add Account\n                    </Typography>\n                    <FormControl fullWidth className={classes.margin}>\n                        <InputLabel htmlFor=\"acc-no\">Account Number</InputLabel>\n                        <Input\n                            id=\"acc-no\"\n                            value={values.accountNo}\n                            onChange={handleChange('accountNo')}\n                        />\n                    </FormControl>\n                    <FormControl fullWidth className={classes.margin}>\n                        <InputLabel htmlFor=\"bank-name\">Bank Name</InputLabel>\n                        <Input\n                            id=\"bank-name\"\n                            value={values.bankName}\n                            onChange={handleChange('bankName')}\n                        />\n                    </FormControl>\n                    {/* <div className =\"form-group\">\n                        <label for=\"name\" class=\"text-light\">Account Type</label>\n                        <div class=\"radio inline\">\n                            <input type=\"radio\" id=\"radio-4\" name=\"status\" value=\"Active\"/>\n                            <label for=\"radio-4\" class=\"radio-label\">Savings</label>\n                        </div>\n                        <div className=\"radio inline\">\n                            <input type=\"radio\" id=\"radio-5\" name=\"status\" value=\"Inactive\"/>\n                            <label for=\"radio-5\" class=\"radio-label\">Current</label>\n                        </div>\n                    </div> */}\n                    <FormControl fullWidth className={classes.margin}>\n                        <InputLabel htmlFor=\"bvn-code\">BVN Number </InputLabel>\n                        <Input\n                            id=\"bvn-code\"\n                            value={values.bvn}\n                            onChange={handleChange('bvn')}\n                        />\n                    </FormControl>\n                </CardContent>\n                <CardActions>\n                    <Button type='submit' color='primary' variant='contained'>Submit</Button>\n                </CardActions>\n            </form>\n        </Card>\n    )\n}\n\nexport default connect(null, { addAccountDetails })(AddAccountForm)\n",{"ruleId":"148","replacedBy":"149"},{"ruleId":"150","replacedBy":"151"},{"ruleId":"152","severity":1,"message":"153","line":5,"column":8,"nodeType":"154","messageId":"155","endLine":5,"endColumn":14},{"ruleId":"152","severity":1,"message":"156","line":1,"column":10,"nodeType":"154","messageId":"155","endLine":1,"endColumn":16},{"ruleId":"157","severity":1,"message":"158","line":49,"column":17,"nodeType":"159","endLine":49,"endColumn":50},{"ruleId":"160","severity":1,"message":"161","line":46,"column":8,"nodeType":"162","endLine":46,"endColumn":15,"suggestions":"163"},{"ruleId":"152","severity":1,"message":"164","line":2,"column":111,"nodeType":"154","messageId":"155","endLine":2,"endColumn":126},{"ruleId":"160","severity":1,"message":"165","line":84,"column":8,"nodeType":"162","endLine":84,"endColumn":46,"suggestions":"166"},{"ruleId":"152","severity":1,"message":"167","line":38,"column":13,"nodeType":"154","messageId":"155","endLine":38,"endColumn":28},{"ruleId":"152","severity":1,"message":"168","line":83,"column":23,"nodeType":"154","messageId":"155","endLine":83,"endColumn":31},{"ruleId":"160","severity":1,"message":"165","line":101,"column":8,"nodeType":"162","endLine":101,"endColumn":58,"suggestions":"169"},{"ruleId":"152","severity":1,"message":"170","line":2,"column":74,"nodeType":"154","messageId":"155","endLine":2,"endColumn":79},{"ruleId":"160","severity":1,"message":"171","line":33,"column":8,"nodeType":"162","endLine":33,"endColumn":17,"suggestions":"172"},{"ruleId":"152","severity":1,"message":"173","line":8,"column":25,"nodeType":"154","messageId":"155","endLine":8,"endColumn":28},{"ruleId":"152","severity":1,"message":"173","line":23,"column":25,"nodeType":"154","messageId":"155","endLine":23,"endColumn":28},{"ruleId":"174","severity":1,"message":"175","line":87,"column":40,"nodeType":"176","messageId":"177","endLine":87,"endColumn":42},{"ruleId":"174","severity":1,"message":"175","line":87,"column":69,"nodeType":"176","messageId":"177","endLine":87,"endColumn":71},{"ruleId":"152","severity":1,"message":"178","line":1,"column":17,"nodeType":"154","messageId":"155","endLine":1,"endColumn":26},{"ruleId":"152","severity":1,"message":"179","line":2,"column":63,"nodeType":"154","messageId":"155","endLine":2,"endColumn":71},{"ruleId":"152","severity":1,"message":"180","line":2,"column":80,"nodeType":"154","messageId":"155","endLine":2,"endColumn":94},{"ruleId":"152","severity":1,"message":"181","line":2,"column":120,"nodeType":"154","messageId":"155","endLine":2,"endColumn":133},{"ruleId":"152","severity":1,"message":"182","line":5,"column":10,"nodeType":"154","messageId":"155","endLine":5,"endColumn":15},{"ruleId":"152","severity":1,"message":"183","line":6,"column":10,"nodeType":"154","messageId":"155","endLine":6,"endColumn":24},"no-native-reassign",["184"],"no-negated-in-lhs",["185"],"no-unused-vars","'Navbar' is defined but never used.","Identifier","unusedVar","'AppBar' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getAccountDetails'. Either include it or remove the dependency array. If 'getAccountDetails' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["186"],"'SnackbarContent' is defined but never used.","React Hook useEffect has a missing dependency: 'values'. Either include it or remove the dependency array. You can also do a functional update 'setValues(v => ...)' if you only need 'values' in the 'setValues' call.",["187"],"'isAuthenticated' is assigned a value but never used.","'register' is assigned a value but never used.",["188"],"'Input' is defined but never used.","React Hook useEffect has a missing dependency: 'getTransactions'. Either include it or remove the dependency array. If 'getTransactions' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["189"],"'msg' is assigned a value but never used.","no-mixed-operators","Unexpected mix of '&&' and '||'. Use parentheses to clarify the intended order of operations.","LogicalExpression","unexpectedMixedOperator","'useEffect' is defined but never used.","'Snackbar' is defined but never used.","'InputAdornment' is defined but never used.","'OutlinedInput' is defined but never used.","'Alert' is defined but never used.","'validateFields' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"190","fix":"191"},{"desc":"192","fix":"193"},{"desc":"194","fix":"195"},{"desc":"196","fix":"197"},"Update the dependencies array to be: [getAccountDetails, phone]",{"range":"198","text":"199"},"Update the dependencies array to be: [error, history, auth.isAuthenticated, values]",{"range":"200","text":"201"},"Update the dependencies array to be: [error, successMsg, auth.isAuthenticated, history, values]",{"range":"202","text":"203"},"Update the dependencies array to be: [account, getTransactions]",{"range":"204","text":"205"},[1242,1249],"[getAccountDetails, phone]",[2520,2558],"[error, history, auth.isAuthenticated, values]",[3104,3154],"[error, successMsg, auth.isAuthenticated, history, values]",[995,1004],"[account, getTransactions]"]