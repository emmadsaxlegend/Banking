{"version":3,"sources":["utils/Constant.js","reducers/authReducer.js","reducers/alertReducer.js","reducers/profileReducer.js","reducers/accountReducer.js","reducers/transactionReducer.js","store/store.js","actions/Alert.js","actions/Profile.js","utils/Common.js","actions/Auth.js","actions/accountActions.js","components/AddAccountForm.js","components/AccountForm.js","actions/transactionAction.js","utils/mask.js","components/TransactionTable.js","components/Summary.js","components/Account.js","components/Login.js","images/bank.png","components/Navbar.js","components/Profile.js","components/Register.js","router/PrivateRoutes.js","router/AppRouter.js","App.js","reportWebVitals.js","index.js"],"names":["SIGN_IN","SIGN_OUT","SET_ERRORS","RESET_ERRORS","SET_SUCCESS_MSG","RESET_SUCCESS_MSG","UPDATE_PROFILE","GET_PROFILE","GET_ACCOUNT","UPDATE_ACCOUNT","ADD_TRANSACTION","GET_TRANSACTION","initialState","userInfo","isAuthenticated","authReducer","state","action","type","payload","localStorage","removeItem","error","successMsg","alertReducer","filter","msg","id","profileInfo","profileReducer","accountReducer","account","transactionReducer","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","combineReducers","auth","alert","profile","transaction","applyMiddleware","thunk","setErrors","timeout","dispatch","v4","setTimeout","setSuccessMsg","initiateGetProfile","phone","setAuthHeader","Axios","get","data","response","validateFields","fieldsToValidate","every","field","Object","values","updateStore","user","userid","signIn","token","getItem","defaults","headers","common","removeAuthHeader","updateAccount","accountDetails","useStyles","makeStyles","theme","root","minWidth","bullet","display","margin","transform","title","fontSize","pos","marginBottom","marginTop","margin1","spacing","connect","addAccountDetails","account_no","bank_name","bvn","post","classes","useState","accountNo","bankName","setValues","handleChange","prop","event","target","value","addAccount","e","preventDefault","Card","className","variant","onSubmit","CardContent","Typography","gutterBottom","FormControl","fullWidth","InputLabel","htmlFor","Input","onChange","CardActions","Button","color","depositAmount","account_id","deposit_amount","transactionDetails","withdrawAmount","withdraw_amount","number","amount","setAmount","toString","slice","padStart","length","Container","_id","Number","total_balance","OutlinedInput","size","startAdornment","InputAdornment","position","labelWidth","style","width","placeholder","required","columns","label","format","Date","toDateString","align","toLocaleString","container","maxHeight","rows","page","setPage","React","rowsPerPage","setRowsPerPage","Paper","TableContainer","Table","stickyHeader","TableHead","TableRow","map","column","TableCell","TableBody","row","hover","role","tabIndex","code","TablePagination","rowsPerPageOptions","component","count","onChangePage","newPage","onChangeRowsPerPage","disablePrevDates","startDate","startSeconds","parse","date","getTransactions","endDate","params","transactions","setStartDate","setEndDate","useEffect","Grid","justify","alignItems","item","xs","alignContent","utils","DateFnsUtils","autoOk","maxDate","KeyboardButtonProps","shouldDisableDate","onClick","TabPanel","props","children","index","other","hidden","Box","p","a11yProps","getAccountDetails","setValue","AppBar","Tabs","newValue","indicatorColor","textColor","Tab","root1","flexGrow","flexWrap","withoutLabel","textField","linkStyle","textDecoration","initiateLogin","password","result","setItem","console","history","useHistory","showPassword","open","closeSnackbar","reason","push","signin_error","Snackbar","anchorOrigin","vertical","horizontal","onClose","Alert","severity","direction","clsx","endAdornment","IconButton","onMouseDown","Visibility","VisibilityOff","my","to","menuButton","marginRight","cursor","logout","anchorEl","setAnchorEl","Boolean","handleClose","CssBaseline","Toolbar","src","logo","currentTarget","AccountCircle","Menu","keepMounted","transformOrigin","MenuItem","maxWidth","fontWeight","text","marginLeft","marginX","updateProfile","profileData","setOpen","name","justifyContent","Edit","Divider","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","registerUser","success","cpassword","cShowPassword","openSuccess","handleClickShowPassword","handleMouseDownPassword","onFormSubmit","signup_error","autoHideDuration","s","Component","rest","render","path","Login","exact","Register","Profile","Account","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","user_token","decoded","jwt_decode","maintainSession","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.4af7e95a.chunk.js","sourcesContent":["export const SIGN_IN = 'SIGN_IN'\nexport const SIGN_OUT = 'SIGN_OUT'\nexport const SET_ERRORS = 'SET_ERRORS'\nexport const RESET_ERRORS = 'RESET_ERRORS'\nexport const SET_SUCCESS_MSG = 'SET_SUCCESS_MSG'\nexport const RESET_SUCCESS_MSG = 'RESET_SUCCESS_MSG'\nexport const UPDATE_PROFILE = 'UPDATE_PROFILE'\nexport const GET_PROFILE = 'GET_PROFILE'\nexport const GET_ACCOUNT = 'GET_ACCOUNT'\nexport const UPDATE_ACCOUNT = 'UPDATE_ACCOUNT'\nexport const ADD_TRANSACTION = 'ADD_TRANSACTION'\nexport const GET_TRANSACTION = 'GET_TRANSACTION'","import { SIGN_IN, SIGN_OUT } from '../utils/Constant'\n\nconst initialState = {\n    userInfo: null,\n    isAuthenticated: false\n}\n\nconst authReducer = ( state= initialState, action ) => {\n    switch(action.type) {\n        case SIGN_IN:\n            return {\n                ...state,\n                userInfo: action.payload,\n                isAuthenticated: true\n            }\n\n        case SIGN_OUT:\n            localStorage.removeItem('user_token')\n            return {\n                ...state,\n                userInfo: null,\n                isAuthenticated: false\n            }\n\n        default:\n            return state\n    }\n}\n\nexport default authReducer","import { SET_ERRORS, RESET_ERRORS, RESET_SUCCESS_MSG, SET_SUCCESS_MSG } from '../utils/Constant'\n\nconst initialState = {\n    error : [],\n    successMsg : []\n}\nconst alertReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_SUCCESS_MSG:\n            return {\n                ...state,\n                successMsg: [...state.successMsg, action.payload]\n            }\n        \n        case SET_ERRORS:\n            return {\n                ...state,\n                error: [...state.error, action.payload]\n            }\n\n        case RESET_SUCCESS_MSG:\n            return {\n                ...state,\n                successMsg: state.successMsg.filter(msg => msg.id !== action.payload)\n            }\n\n        case RESET_ERRORS:\n            return {\n                ...state,\n                error: state.error.filter(error => error.id !== action.payload)\n            }\n        \n        default:\n            return state\n    }\n} \n\nexport default alertReducer","import { GET_PROFILE, SIGN_OUT, UPDATE_PROFILE } from \"../utils/Constant\";\n\nconst initialState = {\n    profileInfo: null\n}\nconst profileReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case UPDATE_PROFILE:\n        case GET_PROFILE:\n            return {\n                ...state,\n                profileInfo: action.payload\n            }\n        \n        case SIGN_OUT:\n            return {\n                profileInfo: null\n            }\n        \n        default:\n            return state\n    }\n}\n\nexport default profileReducer","import { UPDATE_ACCOUNT, GET_ACCOUNT, SIGN_OUT } from '../utils/Constant';\n\nconst accountReducer = (state = {}, action) => {\n    switch (action.type) {\n        case GET_ACCOUNT:\n            return {\n                ...action.payload.account\n            }\n        \n        case UPDATE_ACCOUNT:\n            return {\n                ...action.payload\n            }\n        \n        case SIGN_OUT:\n            return {}\n        \n        default:\n            return state\n    }\n}\n\nexport default accountReducer","import { ADD_TRANSACTION, GET_TRANSACTION, SIGN_OUT } from \"../utils/Constant\";\n\nconst transactionReducer = (state = [], action) => {\n    switch (action.type) {\n        case ADD_TRANSACTION:\n            return [...state, action.payload]\n        \n        case GET_TRANSACTION:\n            return [...action.payload]\n        \n        case SIGN_OUT:\n            return []\n        \n        default:\n            return state\n    }\n}\n\nexport default transactionReducer","import { createStore, compose, applyMiddleware, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\nimport authReducer from '../reducers/authReducer';\nimport alertReducer from '../reducers/alertReducer';\nimport profileReducer from '../reducers/profileReducer';\nimport accountReducer from '../reducers/accountReducer';\nimport transactionReducer from '../reducers/transactionReducer';\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\nconst store = createStore(\n    combineReducers({\n        auth: authReducer,\n        alert: alertReducer,\n        profile: profileReducer,\n        account: accountReducer,\n        transaction: transactionReducer\n    }),\n    composeEnhancer(applyMiddleware(thunk))\n)\n\nexport default store","import { v4 } from \"uuid\"\nimport { SET_ERRORS, RESET_ERRORS, RESET_SUCCESS_MSG, SET_SUCCESS_MSG } from \"../utils/Constant\"\n\n\nexport const setErrors = (error, timeout = 5000) => dispatch => {\n    const id = v4()\n    dispatch({\n        type: SET_ERRORS,\n        payload: {error, id}\n    })\n    \n    setTimeout(() => dispatch({ type: RESET_ERRORS, payload: id }), timeout )\n}\n\nexport const setSuccessMsg = (successMsg, timeout = 5000) => dispatch => {\n    const id = v4()\n    dispatch({\n        type: SET_SUCCESS_MSG,\n        payload: { successMsg, id}\n    })\n    setTimeout(() => dispatch({ type: RESET_SUCCESS_MSG, payload: id }), timeout )\n}","import Axios from \"axios\"\nimport { setAuthHeader } from \"../utils/Common\"\nimport { GET_PROFILE, UPDATE_PROFILE } from \"../utils/Constant\"\nimport { setErrors } from \"./Alert\"\n\nexport const updateProfile = (profileData) => async dispatch => {\n    try {\n        const profile = await Axios.post(`http://localhost:5000/profile`, profileData);\n        dispatch({\n            type: UPDATE_PROFILE,\n            payload: profile.data\n        });\n        // history.push('/profile');\n    } catch (error) {\n        error.response && dispatch(setErrors(error.response.data));\n    }\n}\n\nexport const initiateGetProfile = (phone) => async dispatch => {\n    try {\n        setAuthHeader()\n        const profile = await Axios.get(`http://localhost:5000/profile`);\n        dispatch({\n            type: GET_PROFILE,\n            payload: profile.data\n        });\n    } catch (error) {\n        error.response && dispatch(setErrors(error.response.data));\n    }\n}","import { signIn } from \"../actions/Auth\"\nimport store from \"../store/store\"\nimport jwt_decode from 'jwt-decode'\nimport Axios from \"axios\"\nimport { initiateGetProfile } from \"../actions/Profile\"\n\nexport const validateFields = fieldsToValidate => {\n    return fieldsToValidate.every((field) => Object.values(field)[0] !== '')\n}\n\nexport const maintainSession = () => {\n    const user_token = localStorage.getItem('user_token')\n    if (user_token) {\n        const decoded = jwt_decode(user_token)\n        updateStore(decoded)\n    }\n}\n\nexport const updateStore = (user) => {\n    const { userid, phone } = user\n    store.dispatch(\n        signIn({\n            userid,\n            phone,\n            token: localStorage.getItem('user_token')\n        })\n    )\n    store.dispatch(initiateGetProfile(phone))\n}\n\nexport const setAuthHeader = () => {\n    const token = localStorage.getItem('user_token');\n    if (token) {\n        Axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n    }\n}\n  \nexport const removeAuthHeader = () => {\n    delete Axios.defaults.headers.common['Authorization'];\n}","import Axios from 'axios'\nimport { removeAuthHeader, setAuthHeader } from '../utils/Common'\nimport { SIGN_IN, SIGN_OUT } from '../utils/Constant'\nimport { setErrors, setSuccessMsg } from './Alert'\nimport { initiateGetProfile } from './Profile'\n\nexport const initiateLogin = (phone, password) => async dispatch => {\n    try {\n        const result = await Axios.post(`http://localhost:5000/signin`, {\n            phone,\n            password\n        })\n        const user = result.data\n        localStorage.setItem('user_token', user.token)\n\n        dispatch({\n            type: SIGN_IN,\n            payload: user\n        })\n        dispatch(initiateGetProfile(user.phone))\n    } catch (error) {\n        console.error(error)\n        dispatch(setErrors(error.response.data))\n    }\n}\n\nexport const signIn = (user) => dispatch => {\n    dispatch({\n        type: SIGN_IN,\n        payload: user\n    })\n}\n\nexport const registerUser = (data) => async dispatch => {\n    try {\n        await Axios.post(`http://localhost:5000/signup`, data)\n        dispatch(setSuccessMsg('User Registerd Successfully'))\n        return { success: true}\n    } catch (error) {\n        dispatch(setErrors(error.response.data))\n        return { success: false}\n    }\n}\n\nexport const signOut = () => ({\n    type: SIGN_OUT\n})\n  \nexport const logout = () => async (dispatch) => {\n        try {\n            setAuthHeader()\n            await Axios.post(`http://localhost:5000/logout`)\n            removeAuthHeader()\n            localStorage.removeItem('user_token')\n            return dispatch(signOut())\n        } catch (error) {\n            error.response && dispatch(setErrors(error.response.data))\n    }\n}","import Axios from \"axios\"\nimport { setAuthHeader } from \"../utils/Common\"\nimport { GET_ACCOUNT, UPDATE_ACCOUNT } from \"../utils/Constant\"\nimport { setErrors } from './Alert'\n\nexport const updateAccount = (accountDetails) => async dispatch => {\n    dispatch({\n        type: UPDATE_ACCOUNT,\n        payload: accountDetails\n    })\n}\n\nexport const getAccountDetails = () => async (dispatch) => {\n    try {\n        setAuthHeader()\n        const accountDetails = await Axios.get('http://localhost:5000/account')\n        dispatch({\n            type : GET_ACCOUNT,\n            payload: accountDetails.data\n        })\n    } catch (error) {\n        error.response && dispatch(setErrors(error.response.data))\n    }\n}\n\nexport const addAccountDetails = (account_no, bank_name, bvn) => async (dispatch) => {\n    try {\n        setAuthHeader()\n        const account = await Axios.post('http://localhost:5000/account', {\n            account_no,\n            bank_name,\n            bvn\n        })\n        \n        dispatch({\n            type : GET_ACCOUNT,\n            payload: account.data\n        })\n    } catch (error) {\n        error.response && dispatch(setErrors(error.response.data))\n    }\n}\n\nexport const updateAccountDetails = (bvn) => async (dispatch) => {\n    try {\n        setAuthHeader()\n        const accountDetails = await Axios.patch('http://localhost:5000/account', {\n            bvn\n        })\n        dispatch({\n            type : GET_ACCOUNT,\n            payload: accountDetails.data\n        })\n    } catch (error) {\n        error.response && dispatch(setErrors(error.response.data))\n    }\n}","import React, { useEffect, useState } from 'react'\nimport { Button, Card, CardActions, CardContent, FormControl, Snackbar, Input, InputAdornment, InputLabel, makeStyles, OutlinedInput, Typography } from '@material-ui/core'\nimport { connect } from 'react-redux'\nimport { addAccountDetails } from '../actions/accountActions'\nimport { Alert } from '@material-ui/lab'\nimport { validateFields } from '../utils/Common'\n\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        minWidth: 275,\n    },\n    bullet: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)',\n    },\n    title: {\n        fontSize: 20,\n    },\n    pos: {\n        marginBottom: 12,\n        marginTop: 12,\n    },\n    margin: {\n        marginTop: 18,\n        marginBottom: 18\n    },\n    margin1: {\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1)\n    }\n}))\n\n\nconst AddAccountForm = ({ addAccountDetails, setErrors, error,successMsg}) => {\n    const classes = useStyles()\n    const [values, setValues] = useState({\n        accountNo: \"\",\n        bankName: \"\",\n        bvn: \"\"\n    })\n   \n    // const closeSnackbar = (event, reason) => {\n    //     if (reason === 'clickaway') { return; }\n    //     setValues({...values, open: false})\n    //     setValues({...values, openSuccess: false})\n    // }\n\n    const handleChange = (prop) => (event) => {\n        setValues({...values, [prop]: event.target.value})\n    }\n    const addAccount = async (e) => {\n        e.preventDefault()\n        // const { accountNo, bankName, bvn } = values\n        // const fieldsToValidate = [\n        //     { accountNo },\n        //     { bankName },\n        //     { bvn },\n        // ]\n\n        // const allFieldsEntered = validateFields(fieldsToValidate)\n        // if (!allFieldsEntered) {\n        //     setErrors({ sign_error: 'Please enter all the fields' })\n        //     // alert('enter all fields')\n        // }else{\n            await addAccountDetails(values.accountNo, values.bankName, values.bvn)\n        // }\n       \n        \n    }\n    // useEffect(() => {\n    //     if(error && error.length !== 0){\n    //         setValues({...values, open: true})\n    //     } else if(successMsg && successMsg.length !== 0){\n    //         setValues({...values, openSuccess: true})\n    //     } else {\n    //         setValues({...values, open: false})\n    //         setValues({...values, openSuccess: false})\n    //     }\n    // }, [error, successMsg])\n    return (\n        <Card className={classes.root} variant=\"outlined\">\n            <form onSubmit={addAccount}>\n            {/* {error && values.open && error.map(e => (\n                <Snackbar anchorOrigin={{ vertical: 'top', horizontal: 'right' }} autoHideDuration={6000} open={values.open} onClose={closeSnackbar}>\n                    <Alert onClose={closeSnackbar} severity=\"error\">\n                        {e.error.sign_error}\n                    </Alert>\n                </Snackbar>\n            ))}\n            {successMsg && values.openSuccess && successMsg.map(s => (\n                <Snackbar anchorOrigin={{ vertical: 'top', horizontal: 'right' }} autoHideDuration={6000} open={values.openSuccess} onClose={closeSnackbar}>\n                    <Alert onClose={closeSnackbar} severity=\"success\">\n                        {s.successMsg}\n                    </Alert>\n                </Snackbar>\n            ))\n            } */}\n                <CardContent>\n                    <Typography className={classes.title} gutterBottom>\n                        Add Account\n                    </Typography>\n                    <FormControl fullWidth className={classes.margin}>\n                        <InputLabel htmlFor=\"acc-no\">Account Number</InputLabel>\n                        <Input\n                            id=\"acc-no\"\n                            value={values.accountNo}\n                            onChange={handleChange('accountNo')}\n                        />\n                    </FormControl>\n                    <FormControl fullWidth className={classes.margin}>\n                        <InputLabel htmlFor=\"bank-name\">Bank Name</InputLabel>\n                        <Input\n                            id=\"bank-name\"\n                            value={values.bankName}\n                            onChange={handleChange('bankName')}\n                        />\n                    </FormControl>\n                    {/* <div className =\"form-group\">\n                        <label for=\"name\" class=\"text-light\">Account Type</label>\n                        <div class=\"radio inline\">\n                            <input type=\"radio\" id=\"radio-4\" name=\"status\" value=\"Active\"/>\n                            <label for=\"radio-4\" class=\"radio-label\">Savings</label>\n                        </div>\n                        <div className=\"radio inline\">\n                            <input type=\"radio\" id=\"radio-5\" name=\"status\" value=\"Inactive\"/>\n                            <label for=\"radio-5\" class=\"radio-label\">Current</label>\n                        </div>\n                    </div> */}\n                    <FormControl fullWidth className={classes.margin}>\n                        <InputLabel htmlFor=\"bvn-code\">BVN Number </InputLabel>\n                        <Input\n                            id=\"bvn-code\"\n                            value={values.bvn}\n                            onChange={handleChange('bvn')}\n                        />\n                    </FormControl>\n                </CardContent>\n                <CardActions>\n                    <Button type='submit' color='primary' variant='contained'>Submit</Button>\n                </CardActions>\n            </form>\n        </Card>\n    )\n}\n\nexport default connect(null, { addAccountDetails })(AddAccountForm)\n","import React, { useState } from 'react'\nimport { Button, Card, CardActions, CardContent, Container, FormControl, Input, InputAdornment, InputLabel, makeStyles, OutlinedInput, Typography } from '@material-ui/core'\nimport AddAccountForm from './AddAccountForm'\nimport { connect } from 'react-redux'\nimport { maskNumber } from '../utils/mask'\nimport { depositAmount, withdrawAmount } from '../actions/transactionAction'\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        minWidth: 275,\n    },\n    bullet: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)',\n    },\n    title: {\n        fontSize: 20,\n    },\n    pos: {\n        marginBottom: 12,\n        marginTop: 12,\n    },\n    margin: {\n        marginTop: 18,\n        marginBottom: 18\n    },\n    margin1: {\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1)\n    }\n}))\n\nconst AccountForm = ({ type, account, withdrawAmount, depositAmount }) => {\n    const classes = useStyles()\n    const [amount, setAmount] = useState(\"\")\n    const accountNo = account.account_no ? maskNumber(account.account_no) : ''\n\n\n    const onSubmit = (e) => {\n        // e.preventDefault()\n        type === 'Deposit' ? depositAmount(account._id, Number(amount), alert(\"Deposited succesfully\")) : withdrawAmount(account._id, Number(amount), alert('Withdrawal Successfully'))\n        setAmount('')\n    }\n    return (\n        <Container>\n            { accountNo ? \n            <Card className={classes.root} variant=\"outlined\">\n                <form onSubmit={onSubmit}>\n                    <CardContent>\n                        <Typography className={classes.title} gutterBottom>\n                            {type}\n                        </Typography>\n                        <Typography className={classes.pos}>\n                            Account Number: { accountNo }\n                        </Typography>\n                        <Typography className={classes.pos}>\n                            Available Balance: {account.total_balance}\n                        </Typography>\n                        <Typography className={classes.margin}>\n                        <FormControl className={classes.margin1} variant=\"outlined\">\n                            <InputLabel htmlFor=\"outlined-adornment-amount\">Amount</InputLabel>\n                                <OutlinedInput\n                                    size='small'\n                                    id=\"outlined-adornment-amount\"\n                                    value={amount}\n                                    onChange={(e) => setAmount(e.target.value)}\n                                    startAdornment={<InputAdornment position=\"start\">&#8358;</InputAdornment>}\n                                    labelWidth={60}\n                                    style={{width: '50vw'}}\n                                    placeholder={`Enter the amount to ` + type }\n                                    required\n                                />\n                            </FormControl>\n                        </Typography>\n                    </CardContent>\n                    <CardActions>\n                        <Button type='submit' color='primary' variant='contained'>Submit</Button>\n                    </CardActions>\n                </form>\n            </Card> :\n            <AddAccountForm/> }\n        </Container>\n    )\n}\n\nconst mapStateToProps = state => ({\n    account: state.account\n})\n\nexport default connect(mapStateToProps, { depositAmount, withdrawAmount })(AccountForm)","import Axios from 'axios'\nimport { ADD_TRANSACTION, GET_TRANSACTION } from '../utils/Constant'\nimport { updateAccount } from './accountActions'\nimport { setErrors } from './Alert'\n\nexport const depositAmount = (account_id, deposit_amount) => async dispatch => {\n    try {\n        const { data: { msg , accountDetails, transactionDetails } } = await Axios.post(`http://localhost:5000/deposit/${account_id}`, { deposit_amount })\n        \n        dispatch({\n            type: ADD_TRANSACTION,\n            payload: transactionDetails\n        })\n\n        dispatch(updateAccount(accountDetails))\n    } catch (error) {\n        error.response && dispatch(setErrors(error.response.data))\n    }\n}\n\nexport const withdrawAmount = (account_id, withdraw_amount) => async dispatch => {\n    try {\n        const { data: { msg , accountDetails, transactionDetails } } = await Axios.post(`http://localhost:5000/withdraw/${account_id}`, { withdraw_amount })\n\n        dispatch({\n            type: ADD_TRANSACTION,\n            payload: transactionDetails\n        })\n\n        dispatch(updateAccount(accountDetails))\n    } catch (error) {\n        error.response && dispatch(setErrors(error.response.data))\n    }\n}\n\nexport const getTransactions = (account_id, startDate, endDate) => async dispatch => {\n    try {\n        const transactions = await Axios.get(`http://localhost:5000/transaction/${account_id}`,\n            {\n                params: {\n                    startDate,\n                    endDate\n                }\n            })\n        dispatch({\n            type: GET_TRANSACTION,\n            payload: transactions.data\n        })\n    } catch (error) {\n        error.response && dispatch(setErrors(error.response.data))\n    }\n}","export const maskNumber = (number) => {\n    return number.toString().slice(-4).padStart(number.toString().length, '*');\n}","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport { connect } from 'react-redux';\n\nconst columns = [\n  { id: 'transaction_date', label: 'Date', minWidth: 170, format: (value) => new Date(value).toDateString() },\n  {\n    id: 'deposit_amount',\n    label: 'Deposits',\n    align: 'right',\n    minWidth: 100,\n    format: (value) => value.toLocaleString('en-US'),\n  },\n  {\n    id: 'withdraw_amount',\n    label: 'Withdrawals',\n    minWidth: 170,\n    align: 'right',\n    format: (value) => value.toLocaleString('en-US'),\n  },\n  {\n    id: 'balance',\n    label: 'Balance',\n    minWidth: 170,\n    align: 'right',\n    format: (value) => value.toLocaleString('en-US'),\n  },\n];\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n  },\n  container: {\n    maxHeight: 440,\n  },\n});\n\nconst TransactionTable = ({ transaction }) => {\n  const rows = transaction\n  const classes = useStyles();\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  return (\n    <Paper className={classes.root}>\n      <TableContainer className={classes.container}>\n        <Table stickyHeader aria-label=\"sticky table\">\n          <TableHead>\n            <TableRow>\n              {columns.map((column) => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth}}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\n              return (\n                <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code} >\n                  {columns.map((column) => {\n                    const value = row[column.id];\n                    return (\n                      <TableCell key={column.id} align={column.align} style={{color: 'brown'}}>\n                        {column.format && typeof value === 'number' || column.label === 'Date' ? column.format(value) : value}\n                      </TableCell>\n                    );\n                  })}\n                </TableRow>\n              );\n            })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <TablePagination\n        rowsPerPageOptions={[10, 25, 100]}\n        component=\"div\"\n        count={rows.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onChangePage={handleChangePage}\n        onChangeRowsPerPage={handleChangeRowsPerPage}\n      />\n    </Paper>\n  );\n}\n\nconst mapStateToProps = state => ({\n  transaction: state.transaction\n})\nexport default connect(mapStateToProps, null)(TransactionTable)\n","import 'date-fns';\nimport React, { useEffect, useState } from 'react'\nimport Grid from '@material-ui/core/Grid';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\nimport { Button, makeStyles } from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport { getTransactions } from '../actions/transactionAction';\nimport TransactionTable from './TransactionTable';\n\nfunction disablePrevDates(startDate) {\n    const startSeconds = Date.parse(startDate);\n    return (date) => {\n        return Date.parse(date) < startSeconds;\n    }\n}\n\nconst useStyles = makeStyles({\n    margin: {\n        marginBottom: 10\n    }\n})\n\nconst Summary = ({ getTransactions, account }) => {\n    const classes = useStyles()\n    const [startDate, setStartDate] = useState(null);\n    const [endDate, setEndDate] = useState(null);\n\n    useEffect(() => {\n        if(account._id){\n            getTransactions(account._id)\n        }\n    }, [account])\n\n    const onFilter = (event) => {\n        event.preventDefault()\n        getTransactions(account._id, startDate, endDate)\n    }\n    return (\n        <div>\n            <Grid className={classes.margin} container justify='center' alignItems='center' spacing={2}>\n                <Grid item xs={4} alignContent='center'>\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                        <KeyboardDatePicker\n                            variant=\"inline\"\n                            autoOk={true}\n                            format=\"MM/dd/yyyy\"\n                            margin=\"normal\"\n                            id=\"start-date\"\n                            label=\"Start Date\"\n                            value={startDate}\n                            maxDate={new Date()}\n                            onChange={date => setStartDate(date)}\n                            KeyboardButtonProps={{\n                                'aria-label': 'change date',\n                            }}\n                        />\n                    </MuiPickersUtilsProvider>\n                </Grid>\n                <Grid item xs={4}>\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                        <KeyboardDatePicker\n                            variant=\"inline\"\n                            autoOk={true}\n                            format=\"MM/dd/yyyy\"\n                            margin=\"normal\"\n                            id=\"end-date\"\n                            label=\"End Date\"\n                            value={endDate}\n                            maxDate={new Date()}\n                            shouldDisableDate={disablePrevDates(startDate)}\n                            onChange={date => setEndDate(date)}\n                            KeyboardButtonProps={{\n                                'aria-label': 'change date',\n                            }}\n                        />\n                    </MuiPickersUtilsProvider>\n                </Grid>\n                <Grid item xs={4}>\n                    <Button variant='contained' onClick={onFilter} color='primary'>\n                        Filter\n                    </Button>\n                </Grid>\n            </Grid>\n            <TransactionTable/>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    account: state.account,\n})\n\nexport default connect(mapStateToProps, { getTransactions })(Summary)\n","import React, { useEffect, useState } from 'react'\nimport { AppBar, Box, Tab, Tabs, Typography } from '@material-ui/core';\nimport AccountForm from './AccountForm';\nimport Summary from './Summary';\nimport { connect } from 'react-redux';\nimport { getAccountDetails } from '../actions/accountActions';\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props\n  \n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`full-width-tabpanel-${index}`}\n            aria-labelledby={`full-width-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <Box p={3}>\n                    <Typography>{children}</Typography>\n                </Box>\n            )}\n        </div>\n    )\n}\nfunction a11yProps(index) {\n    return {\n        id: `full-width-tab-${index}`,\n        'aria-controls': `full-width-tabpanel-${index}`,\n    }\n}\n\nconst Account = ({ userInfo, getAccountDetails }) => {\n    const [value, setValue] = useState(0);\n    const { phone } = userInfo\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    useEffect(() => {\n        if(phone){\n            getAccountDetails()\n        }\n    }, [phone])\n    return (\n        <div>\n            <AppBar position=\"static\" color=\"default\">\n                <Tabs\n                value={value}\n                onChange={handleChange}\n                indicatorColor=\"primary\"\n                textColor=\"primary\"\n                variant=\"fullWidth\"\n                aria-label=\"full width tabs example\"\n                >\n                    <Tab label=\"Summary\" {...a11yProps(0)} />\n                    <Tab label=\"Withdraw\" {...a11yProps(1)} />\n                    <Tab label=\"Deposit\" {...a11yProps(2)} />\n                </Tabs>\n            </AppBar>\n            <TabPanel value={value} index={0}>\n                <Summary/>\n            </TabPanel>\n            <TabPanel value={value} index={1}>\n                <AccountForm type='Withdraw'/>\n            </TabPanel>\n            <TabPanel value={value} index={2}>\n                <AccountForm type='Deposit'/>\n            </TabPanel>\n\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    userInfo: state.auth.userInfo\n})\n\nexport default connect(mapStateToProps, { getAccountDetails })(Account)\n","import React, { useEffect, useState } from 'react'\nimport { Box, Button, FormControl, Grid, IconButton, Input, InputAdornment, InputLabel, makeStyles, Snackbar, SnackbarContent, Typography } from '@material-ui/core'\nimport { Visibility, VisibilityOff } from '@material-ui/icons'\nimport clsx from 'clsx'\nimport { connect } from 'react-redux'\nimport { initiateLogin } from '../actions/Auth'\nimport { validateFields } from '../utils/Common'\nimport { Alert } from '@material-ui/lab'\nimport { setErrors } from '../actions/Alert'\nimport { Link, useHistory } from 'react-router-dom'\n\nconst useStyles = makeStyles((theme) => ({\n    root1: {\n        flexGrow: 1\n    },\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n    },\n    margin: {\n      margin: theme.spacing(1),\n    },\n    withoutLabel: {\n      marginTop: theme.spacing(3),\n    },\n    textField: {\n      width: '50ch',\n    },\n    linkStyle: {\n        textDecoration: 'none',\n        color: 'inherit',\n    }\n}))\n\nconst Login = ({ initiateLogin, error, successMsg, setErrors, auth }) => {\n    const classes = useStyles()\n    const history = useHistory()\n\n    const [values, setValues] = useState({\n        phone: '',\n        password: '',\n        showPassword: false,\n        open: false\n    })\n\n    const handleChange = (prop) => (event) => {\n        setValues({ ...values, [prop]: event.target.value })\n    }\n    const handleClickShowPassword = () => {\n        setValues({ ...values, showPassword: !values.showPassword })\n    }\n    const handleMouseDownPassword = (event) => {\n        event.preventDefault()\n    }\n\n    const onLogin = (e) => {\n        e.preventDefault()\n        const { phone, password } = values\n        const fieldsToValidate = [{ phone }, { password }]\n        const allFieldsEntered = validateFields(fieldsToValidate)\n        if (!allFieldsEntered) {\n            // setValues({ ...values, errorMsg: { signin_error: 'Please enter all the fields' }})\n            setErrors({ signin_error: 'Please enter all the fields' })\n        } else {\n            initiateLogin(phone, password)\n        }\n    }\n    const closeSnackbar = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n    \n        setValues({...values, open: false})\n    }\n    useEffect(() => {\n        if(auth.isAuthenticated){\n            history.push('/account')\n        }\n        if(error && error.length !== 0){\n            setValues({...values, open: true})\n        } else {\n            setValues({...values, open: false})\n        }\n    }, [error, history, auth.isAuthenticated])\n    \n    return (\n        <form onSubmit={onLogin}>\n            {error && error.map(e => (\n                <Snackbar key={e.id} anchorOrigin={{ vertical: 'top', horizontal: 'right' }} open={values.open} onClose={closeSnackbar}>\n                    <Alert onClose={closeSnackbar} severity=\"error\">\n                        {e.error.signin_error}\n                    </Alert>\n                </Snackbar>\n            ))}\n            <Grid  direction=\"column\" justify=\"center\" alignItems=\"center\" className={classes.root1} container spacing={2}>\n                <Grid item xs={12}>\n                    <Typography className={clsx(classes.margin, classes.withoutLabel)} variant='h4' component='h4'> Account Login</Typography>\n                </Grid>\n                <Grid item xs={12}>\n                    <Box display='flex'>\n                        <FormControl className={clsx(classes.margin, classes.textField)}>\n                            <InputLabel htmlFor=\"phone\">Phone/Account Number</InputLabel>\n                            <Input\n                                id=\"phone\"\n                                type='phone'\n                                value={values.phone}\n                                onChange={handleChange('phone')}\n                            />\n                        </FormControl>\n                    </Box>\n                </Grid>\n                <Grid item xs={12}>\n                    <Box display='flex'>\n                        <FormControl className={clsx(classes.margin, classes.textField)}>\n                            <InputLabel htmlFor=\"password\">Password</InputLabel>\n                            <Input\n                                id=\"password\"\n                                type={values.showPassword ? 'text' : 'password'}\n                                value={values.password}\n                                onChange={handleChange('password')}\n                                endAdornment={\n                                <InputAdornment position=\"end\">\n                                    <IconButton\n                                    aria-label=\"toggle password visibility\"\n                                    onClick={handleClickShowPassword}\n                                    onMouseDown={handleMouseDownPassword}\n                                    >\n                                    {values.showPassword ? <Visibility /> : <VisibilityOff />}\n                                    </IconButton>\n                                </InputAdornment>\n                                }\n                            />\n                        </FormControl>\n                    </Box>\n                </Grid>\n                <Grid item xs={12}>\n                    <Box display='flex'>\n                        <Button type='submit' variant='contained' className={clsx(classes.margin, classes.textField)}> Login </Button>\n                    </Box>\n                </Grid>\n                <Box my={1}>\n                    New Customer? <Link className={classes.linkStyle} to='/register'><strong>Register</strong></Link>\n                </Box>\n            </Grid>\n        </form>\n    )\n}\n\nconst mapStateToProps = state => ({\n    error: state.alert.error,\n    successMsg : state.alert.successMsg,\n    auth: state.auth\n})\n\nexport default connect(mapStateToProps, { initiateLogin, setErrors })(Login)\n","export default __webpack_public_path__ + \"static/media/bank.6a15fd75.png\";","import { AppBar, CssBaseline,IconButton, makeStyles, Menu, MenuItem, Toolbar, Typography } from '@material-ui/core'\nimport {AccountCircle } from '@material-ui/icons'\nimport React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom';\nimport { logout } from '../actions/Auth';\nimport logo from '../images/bank.png'\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n      cursor: 'pointer'\n    },\n}))\n\n\n\nconst Navbar = ({ auth, logout }) => {\n    const classes = useStyles()\n    const [anchorEl, setAnchorEl] = useState(null)\n    const open = Boolean(anchorEl)\n    const { isAuthenticated } = auth\n    \n    const handleMenu = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n    \n    const handleClose = () => {\n        setAnchorEl(null);\n    }\n\n    const handleCloseLogout = () => {\n        handleClose()\n        logout()\n    }\n\n    return (\n        <div className={classes.root}>\n            <CssBaseline/>\n            <div className='ward'>\n                <Toolbar>\n                <img src={logo} className='imag'></img>\n    \n             <Typography variant=\"h6\" className={classes.title}>\n                    XYZ Bank\n                </Typography>\n                {isAuthenticated && (\n                    <div>\n                        <span>welcomes</span>\n                    <IconButton\n                        aria-label=\"account of current user\"\n                        aria-controls=\"menu-appbar\"\n                        aria-haspopup=\"true\"\n                        onClick={handleMenu}\n                        color=\"inherit\">\n                        \n                        <AccountCircle />\n                    </IconButton>\n                    <Menu\n                        id=\"menu-appbar\"\n                        anchorEl={anchorEl}\n                        anchorOrigin={{\n                            vertical: 'top',\n                            horizontal: 'right',\n                        }}\n                        keepMounted\n                        transformOrigin={{\n                            vertical: 'top',\n                            horizontal: 'right',\n                        }}\n                        open={open}\n                        onClose={handleClose}\n                    >\n                        <Link to='/profile' style={{ textDecoration: 'none', display: 'block', color: '#000' }}>\n                            <MenuItem onClick={handleClose}>Profile</MenuItem>\n                        </Link>\n                        <Link to='/account' style={{ textDecoration: 'none', display: 'block', color: '#000' }}>\n                            <MenuItem onClick={handleClose}>Account</MenuItem>\n                        </Link>\n                        <MenuItem onClick={handleCloseLogout}>Logout</MenuItem>\n                    </Menu>\n                    </div>\n                )}\n                </Toolbar>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    auth: state.auth\n})\n\nexport default connect(mapStateToProps, { logout })(Navbar)\n\n","import { Box, Button, Card, CardContent, Container, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Divider, FormControl, IconButton, Input, InputLabel, makeStyles, Typography } from '@material-ui/core'\nimport { Edit } from '@material-ui/icons'\nimport React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport { updateProfile } from '../actions/Profile'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      minWidth: 275,\n    },\n    root1: {\n        margin: 'auto',\n        // marginTop: '15px',\n        maxWidth: 700\n    },\n    bullet: {\n      display: 'inline-block',\n      margin: '0 2px',\n      transform: 'scale(0.8)',\n    },\n    title: {\n      fontSize: 14,\n      fontWeight: 'bold',\n      margin: '1% 0'\n    },\n    text: {\n        fontSize: 14,\n        margin: '1% 0'\n    },\n    pos: {\n      marginBottom: 12,\n    },\n    profile:{\n        margin: '4% 0' \n    },\n    marginLeft:{\n        marginLeft: 'auto'\n    },\n    marginX: {\n        marginTop: '1%',\n        marginBottom: '1%',\n        margin: 'auto'\n    }\n}))\n\nexport const Profile = ({ profile, updateProfile }) => {\n    const classes = useStyles()\n    const { profileInfo } = profile\n    const [open, setOpen] = useState(false)\n    const [values, setValues] = useState({\n        name: null,\n        phone: null\n    })\n\n    useEffect(() => {\n        setValues({...values, name: profileInfo && profileInfo.name, phone: profileInfo && profileInfo.phone})\n    }, [profileInfo, values])\n\n    const handleClose = () => {\n        setOpen(false)\n        setValues({...values, phone: profileInfo && profileInfo.phone, name: profileInfo && profileInfo.name})\n    }\n\n    const handleChange = (prop) => (event) => {\n        setValues({ ...values, [prop]: event.target.value })\n    }\n\n    const onSubmit = (e) => {\n        e.preventDefault()\n        updateProfile(values)\n        handleClose()\n    }\n\n    return (\n        <div>\n            <Container className={classes.root1}>\n                <Box display='flex' justifyContent='center' className={classes.profile}>\n                    <Typography component='h4' variant='h4'>\n                        Profile\n                    </Typography>\n                </Box>\n                <Card className={classes.root} variant=\"outlined\">\n                    { profileInfo && <CardContent>\n                        <Box display='flex' justifyContent='flex-end'>\n                            <IconButton onClick={() => setOpen(true)}>\n                                <Edit/>\n                            </IconButton>\n                        </Box>\n                        <Typography className={classes.title}>\n                            Full Name\n                        </Typography>\n                        <Typography className={classes.text}>\n                            {profileInfo.name}\n                        </Typography>\n                        <Divider/>\n                        <Typography className={classes.title}>\n                            Account Number\n                        </Typography>\n                        <Typography className={classes.text}>\n                            {profileInfo.phone}\n                        </Typography>\n                        {/* <Divider/> */}\n                    </CardContent>}\n                    {/* <CardActions>\n                        <Button className={classes.marginLeft} size=\"small\">Change Password</Button>\n                    </CardActions> */}\n                </Card>\n                <Dialog\n                    fullWidth\n                    open={open}\n                    onClose={handleClose}\n                    aria-labelledby=\"alert-dialog-title\"\n                    aria-describedby=\"alert-dialog-description\"\n                >\n                    <form onSubmit={onSubmit}>\n                        <DialogTitle id=\"alert-dialog-title\">{\"Edit Profile\"}</DialogTitle>\n                        <DialogContent>\n                            <DialogContentText id=\"alert-dialog-description\">\n                                <FormControl fullWidth className={classes.marginX}>\n                                    <InputLabel htmlFor=\"name\">Name</InputLabel>\n                                    <Input\n                                        id=\"name\"\n                                        type='text'\n                                        // defaultValue={profileInfo && profileInfo.name}\n                                        value={values.name}\n                                        onChange={handleChange('name')}\n                                        required\n                                    />\n                                </FormControl>\n                                <FormControl fullWidth className={classes.marginX}>\n                                    <InputLabel htmlFor=\"phone\">phone</InputLabel>\n                                    <Input\n                                        id=\"phone\"\n                                        type='phone'\n                                        // defaultValue={profileInfo && profileInfo.phone}\n                                        value={values.phone}\n                                        onChange={handleChange('phone')}\n                                        required\n                                    />\n                                </FormControl>\n                            </DialogContentText>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={handleClose} color=\"primary\">\n                                Cancel\n                            </Button>\n                            <Button type='submit' color=\"primary\" autoFocus>\n                                Save\n                            </Button>\n                        </DialogActions>\n                    </form>\n                </Dialog>  \n            </Container>  \n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    profile: state.profile\n})\n\nexport default connect(mapStateToProps, { updateProfile })(Profile)\n","import React, { useEffect, useState } from 'react'\nimport { Box, Button, FormControl, Grid, IconButton, Input, InputAdornment, InputLabel, makeStyles, Snackbar, Typography } from '@material-ui/core'\nimport { Visibility, VisibilityOff } from '@material-ui/icons'\nimport clsx from 'clsx'\nimport { registerUser } from '../actions/Auth'\nimport { connect } from 'react-redux'\nimport { validateFields } from '../utils/Common'\nimport { setErrors } from '../actions/Alert'\nimport { Alert } from '@material-ui/lab'\nimport { Link, useHistory } from 'react-router-dom'\n\nconst useStyles = makeStyles((theme) => ({\n    root1: {\n        flexGrow: 1\n    },\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n    },\n    margin: {\n      margin: theme.spacing(1),\n    },\n    withoutLabel: {\n      marginTop: theme.spacing(3),\n    },\n    textField: {\n      width: '50ch',\n    },\n    linkStyle: {\n        textDecoration: 'none',\n        color: 'inherit',\n    }\n}))\n\nconst Register = ({ registerUser, setErrors, error, successMsg, auth }) => {\n    const classes = useStyles()\n    const history = useHistory()\n    const { isAuthenticated } = auth\n    const [values, setValues] = useState({\n        name: '',\n        phone: '',\n        password: '',\n        cpassword: '',\n        showPassword: false,\n        cShowPassword: false,\n        open: false,\n        openSuccess: false\n    })\n\n    const handleChange = (prop) => (event) => {\n        setValues({ ...values, [prop]: event.target.value })\n    }\n    const handleClickShowPassword = (type) => {\n        setValues({ ...values, [type]: !values[type] })\n    }\n    const handleMouseDownPassword = (event) => {\n        event.preventDefault()\n    }\n\n    const closeSnackbar = (event, reason) => {\n        if (reason === 'clickaway') { return; }\n        setValues({...values, open: false})\n        setValues({...values, openSuccess: false})\n    }\n\n    const onFormSubmit = async (e) => {\n        e.preventDefault()\n        const { name, phone, password, cpassword } = values\n        const fieldsToValidate = [\n            { name },\n            { phone },\n            { password },\n            { cpassword }\n        ]\n        const allFieldsEntered = validateFields(fieldsToValidate)\n        if (!allFieldsEntered) {\n            setErrors({ signup_error: 'Please enter all the fields' })\n        } else {\n            if (password !== cpassword) {\n                setErrors({ signup_error: 'Password and Confirm password does not match' })\n                \n            } else {\n                const register = await registerUser({ name, phone, password })\n                // history.push('/profile')\n            }\n        }\n    }\n\n    useEffect(() => {\n        if(auth.isAuthenticated){\n            history.push('/profile')\n        }\n        if(error && error.length !== 0){\n            setValues({...values, open: true})\n        } else if(successMsg && successMsg.length !== 0){\n            setValues({...values, openSuccess: true})\n        } else {\n            setValues({...values, open: false})\n            setValues({...values, openSuccess: false})\n        }\n    }, [error, successMsg, auth.isAuthenticated, history])\n    return (\n        <form onSubmit={onFormSubmit}>\n            {error && values.open && error.map(e => (\n                <Snackbar anchorOrigin={{ vertical: 'top', horizontal: 'right' }} autoHideDuration={6000} open={values.open} onClose={closeSnackbar}>\n                    <Alert onClose={closeSnackbar} severity=\"error\">\n                        {e.error.signup_error}\n                    </Alert>\n                </Snackbar>\n            ))}\n            {successMsg && values.openSuccess && successMsg.map(s => (\n                <Snackbar anchorOrigin={{ vertical: 'top', horizontal: 'right' }} autoHideDuration={6000} open={values.openSuccess} onClose={closeSnackbar}>\n                    <Alert onClose={closeSnackbar} severity=\"success\">\n                        {s.successMsg}\n                    </Alert>\n                </Snackbar>\n            ))\n            }\n            <Grid  direction=\"column\" justify=\"center\" alignItems=\"center\" className={classes.root1} container spacing={2}>\n                <Grid item xs={12}>\n                    <Typography className={clsx(classes.margin, classes.withoutLabel)} variant='h4' component='h4'> Account Register</Typography>\n                </Grid>\n                <Grid item xs={12}>\n                    <Box display='flex'>\n                        <FormControl className={clsx(classes.margin, classes.textField)}>\n                            <InputLabel htmlFor=\"name\">Name</InputLabel>\n                            <Input\n                                id=\"name\"\n                                type='text'\n                                value={values.name}\n                                onChange={handleChange('name')}\n                            />\n                        </FormControl>\n                    </Box>\n                </Grid>\n                <Grid item xs={12}>\n                    <Box display='flex'>\n                        <FormControl className={clsx(classes.margin, classes.textField)}>\n                            <InputLabel htmlFor=\"phone\">Phone/Account Number</InputLabel>\n                            <Input\n                                id=\"phone\"\n                                type='phone'\n                                value={values.phone}\n                                onChange={handleChange('phone')}\n                            />\n                        </FormControl>\n                    </Box>\n                </Grid>\n                <Grid item xs={12}>\n                    <Box display='flex'>\n                        <FormControl className={clsx(classes.margin, classes.textField)}>\n                            <InputLabel htmlFor=\"password\">Password</InputLabel>\n                            <Input\n                                id=\"password\"\n                                type={values.showPassword ? 'text' : 'password'}\n                                value={values.password}\n                                onChange={handleChange('password')}\n                                endAdornment={\n                                <InputAdornment position=\"end\">\n                                    <IconButton\n                                    aria-label=\"toggle password visibility\"\n                                    onClick={() => handleClickShowPassword('showPassword')}\n                                    onMouseDown={handleMouseDownPassword}\n                                    >\n                                    {values.showPassword ? <Visibility /> : <VisibilityOff />}\n                                    </IconButton>\n                                </InputAdornment>\n                                }\n                            />\n                        </FormControl>\n                    </Box>\n                </Grid>\n                <Grid item xs={12}>\n                    <Box display='flex'>\n                        <FormControl className={clsx(classes.margin, classes.textField)}>\n                            <InputLabel htmlFor=\"cpassword\">Confirm Password</InputLabel>\n                            <Input\n                                id=\"cpassword\"\n                                type={values.cShowPassword ? 'text' : 'password'}\n                                value={values.cpassword}\n                                onChange={handleChange('cpassword')}\n                                endAdornment={\n                                <InputAdornment position=\"end\">\n                                    <IconButton\n                                    aria-label=\"toggle password visibility\"\n                                    onClick={() => handleClickShowPassword('cShowPassword')}\n                                    onMouseDown={handleMouseDownPassword}\n                                    >\n                                    {values.cShowPassword ? <Visibility /> : <VisibilityOff />}\n                                    </IconButton>\n                                </InputAdornment>\n                                }\n                            />\n                        </FormControl>\n                    </Box>\n                </Grid>\n                <Grid item xs={12}>\n                    <Box display='flex'>\n                        <Button type='submit' variant='contained' className={clsx(classes.margin, classes.textField)}> Register </Button>\n                    </Box>\n                </Grid>\n                <Box my={1}>\n                    Have an account? <Link className={classes.linkStyle} to='/'><strong>Login</strong></Link>\n                </Box>\n            </Grid>\n        </form>\n    )\n}\n\nconst mapStateToProps = state => ({\n    error: state.alert.error,\n    successMsg: state.alert.successMsg,\n    auth: state.auth\n})\n\nexport default connect(mapStateToProps, { registerUser, setErrors })(Register)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Route, Redirect } from 'react-router-dom'\n\nconst PrivateRoutes = ({ component: Component, auth,  ...rest}) => {\n\n    const { isAuthenticated } = auth\n    return (\n        <Route { ...rest } render ={ props => !isAuthenticated ? (\n            <Redirect to = '/' />\n        ): (\n            <Component { ...props } />\n        )} />\n    )\n}\n\nconst mapStateToProps = state => ({\n    auth: state.auth\n})\n\nexport default connect(mapStateToProps, null)(PrivateRoutes)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Route, Switch, BrowserRouter } from 'react-router-dom'\nimport Account from '../components/Account'\nimport Login from '../components/Login'\nimport Navbar from '../components/Navbar'\nimport Profile from '../components/Profile'\nimport Register from '../components/Register'\nimport PrivateRoutes from './PrivateRoutes'\n\n// export const history = createBrowserHistory()\n\nconst AppRouter = () => {\n    return (\n        <BrowserRouter>\n            <div>\n                <Navbar/>\n                <Switch>\n                    <Route path='/' component={Login} exact />\n                    <Route path='/register' component={Register} />\n                    <PrivateRoutes path='/profile' component={Profile} />\n                    <PrivateRoutes path='/account' component={Account} />\n                </Switch>\n            </div>\n        </BrowserRouter>\n    )\n}\n\nconst mapStateToProps = state => ({\n    auth: state.auth\n})\n\nexport default connect(mapStateToProps)(AppRouter)\n","import './App.css';\nimport { Provider } from 'react-redux'\nimport store from './store/store';\nimport AppRouter from './router/AppRouter';\nimport Navbar from './components/Navbar';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      \n      {/* <Navbar/> */}\n\t\t\t<AppRouter/>\n\t\t</Provider>\n  );\n}\n\nexport default App\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { maintainSession } from './utils/Common';\n\nmaintainSession()\nReactDOM.render(\n  \n    <App />,\n \n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}